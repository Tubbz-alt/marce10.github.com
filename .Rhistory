thrshld <- 10
# seewave's dominant frequency tracking
dm_frq <- dfreq(wave = sm_sng, tlim = c(0.1, 0.6), wl = wl, ovlp = ovlp, threshold = thrshld, plot = F, bandpass = bp)
spectro(sm_sng, grid = F, scale = F, f = f, ovlp = ovlp, palette = pal, collevels = cl, wl = wl, osc = F, flim = c(0,10), main = "seewave's dfreq frequency contour")
points(x = dm_frq[ , 1] + 0.1, y =  dm_frq[ , 2], cex = 1, col = adjustcolor("red2", 0.3), pch = 20)
trck_hrm <- track_harm(wave = sm_sng, tlim = c(0.1, 0.6), wl = wl, ovlp = ovlp, threshold = thrshld, plot = F, bandpass = bp)
spectro(sm_sng, grid = F, scale = F, f = f, ovlp = ovlp, palette = pal, collevels = cl, wl = wl, osc = F, flim = c(0,10), main = "warbleR harmonic tracker function")
points(x = trck_hrm[ , 1] + 0.1, y =  trck_hrm[ , 2], cex = 1, col = adjustcolor("red2", 0.3), pch = 20)
trck_hrm <- track_harm(wave = sm_sng, tlim = c(0.1, 0.6), wl = wl, ovlp = ovlp, threshold = thrshld, plot = F, bandpass = bp)
spectro(sm_sng, grid = F, scale = F, f = f, ovlp = ovlp, palette = pal, collevels = cl, wl = wl, osc = F, flim = c(0,10), main = "warbleR harmonic tracker function")
points(x = trck_hrm[ , 1] + 0.1, y =  trck_hrm[ , 2], cex = 1, col = "red2", pch = 20)
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
library(warbleR)
library(Rraven)
path <- "/home/m/Downloads/SampleFWsongs4HarmonicAnalysis/SampleFWsongs4HarmonicAnalysis"
sels <- imp_raven(path = path, all.data = F, name.from.file = T, ext.case = "lower")
sels$sound.files <- gsub("wav", ".wav", sels$sound.files)
sels$sound.files
specreator(sels)
specreator(sels, path = path)
specreator(sels, path = path, parallel = 7, fast.spec = T)
specreator(sels, path = path, parallel = 7, fast.spec = T, flim = c(0, 10), wl = 250)
trackfreqs(sels, path = path, parallel = 7, fast.spec = T, flim = c(0, 10), wl = 250, contour = "df", col = adjustcolor("red2", 0.5))
str(sels)
trackfreqs(sels, path = path, parallel = 7, fast.spec = T, flim = c(0, 10), wl = 250, contour = "df", col = adjustcolor("red2", 0.5), bp = "frange")
move.imgs(from = path, to = "~/Downloads/delete", it = "all")
trackfreqs(sels, path = path, parallel = 7, fast.spec = T, flim = c(2, 10), wl = 250, contour = "df", col = adjustcolor("red2", 0.5), bp = "frange", ovlp = 90, xl = 1.4, pch = 20, mar = 0.02, it = "tiff")
trackfreqs(sels, path = path, parallel = 7, fast.spec = T, flim = c(2, 10), wl = 250, contour = "df", col = adjustcolor("red2", 0.9), bp = "frange", ovlp = 90, xl = 1.4, pch = 20, mar = 0.02, it = "tiff", cex = 2)
move.imgs(from = path, to = "~/Downloads/delete", it = "all",overwrite = T)
specreator(sels, path = path, parallel = 7, fast.spec = T, flim = c(0, 10), wl = 250)
move.imgs(from = path, to = "~/Downloads/delete", it = "all",overwrite = T)
trackfreqs(sels, path = path, parallel = 7, fast.spec = T, flim = c(2, 10), wl = 250, contour = "df", col = adjustcolor("red2", 0.9), bp = "frange", ovlp = 90, xl = 1.4, pch = 20, mar = 0.02, it = "tiff", cex = 2)
move.imgs(from = path, to = "~/Downloads/delete", it = "all",overwrite = T)
trackfreqs(sels, path = path, parallel = 7, fast.spec = T, flim = c(2, 10), wl = 250, contour = "df", col = adjustcolor("red2", 0.9), bp = "frange", ovlp = 90, xl = 1.4, pch = 20, mar = 0.02, it = "tiff", cex = 2)
trackfreqs(sels, path = path, parallel = 7, fast.spec = T, flim = c(2, 10), wl = 250, contour = "df", col = adjustcolor("red2", 0.9), bp = "frange", ovlp = 90, xl = 1.4, pch = 20, mar = 0.02, it = "tiff")
trackfreqs(sels, path = path, parallel = 7, fast.spec = T, flim = c(2, 10), wl = 250, contour = "df", col = adjustcolor("red2", 0.9), bp = "frange", ovlp = 90, xl = 1.4, pch = 20, mar = 0.02, it = "tiff", cex = 2)
move.imgs(from = path, to = "~/Downloads/delete", it = "all",overwrite = T)
trackfreqs(sels, path = path, parallel = 7, fast.spec = T, flim = c(2, 10), wl = 250, contour = "df", col = adjustcolor("red2", 0.9), bp = "frange", ovlp = 90, xl = 1.4, pch = 20, mar = 0.02, it = "tiff")
trackfreqs(sels, path = path, parallel = 7, fast.spec = T, flim = c(2, 10), wl = 250, contour = "df", col = adjustcolor("yellow2", 0.9), bp = "frange", ovlp = 90, xl = 1.4, pch = 20, mar = 0.02, it = "tiff")
trackfreqs(sels, path = path, parallel = 7, fast.spec = T, flim = c(2, 10), wl = 250, contour = "df", col = adjustcolor("yellow2", 0.9), bp = "frange", ovlp = 90, xl = 1.4, pch = 20, mar = 0.02, it = "tiff", cex = c(2, 2))
move.imgs(from = path, to = "~/Downloads/delete", it = "all",overwrite = T)
trackfreqs(sels, path = path, parallel = 7, fast.spec = T, flim = c(2, 10), wl = 250, contour = "df", col = adjustcolor("yellow2", 0.9), bp = "frange", ovlp = 90, xl = 1.4, pch = 20, mar = 0.02, it = "tiff", cex = c(1.3, 1,7), type = "b")
exp_wv <- sels[sels$sound.files == "ADL SPL F UUU T1-2 6 a_SONG3.wav" & sels$selec == 6,]
exp_wv
wv <- readWave(filename = exp_wv$sound.files, from = exp_wv$start - mar, to = exp_wv$end + mar)
wv <- readWave(filename = file.path(path, exp_wv$sound.files), from = exp_wv$start - mar, to = exp_wv$end + mar)
mar <- 0.01
wv <- readWave(filename = file.path(path, exp_wv$sound.files), from = exp_wv$start - mar, to = exp_wv$end + mar)
spectro(wv)
wv <- readWave(filename = file.path(path, exp_wv$sound.files), from = exp_wv$start - mar, to = exp_wv$end + mar, units = "seconds")
spectro(wv)
spectro(wv, collevels = seq(-115, 0, 1))
spectro(wv, collevels = seq(-115, 0, 1), wl = 250)
exp_wv <- sels[sels$sound.files == "ADL SPL F UUU T1-2 6 a_SONG3.wav" & sels$selec == 36,]
mar <- 0.01
wv <- readWave(filename = file.path(path, exp_wv$sound.files), from = exp_wv$start - mar, to = exp_wv$end + mar, units = "seconds")
spectro(wv, collevels = seq(-115, 0, 1), wl = 250)
spectro(wv, collevels = seq(-115, 0, 1), wl = 250, flim = c(1.8, 9.6))
spectro(wv, collevels = seq(-115, 0, 1), wl = 250, flim = c(1.8, 9.6), palette = reverse.gray.colors.1)
spectro(wv, collevels = seq(-115, 0, 1), wl = 250, flim = c(1.8, 9.6), palette = reverse.gray.colors.1, grid = F)
spectro(wv, collevels = seq(-115, 0, 1), wl = 250, flim = c(1.8, 9.6), palette = reverse.gray.colors.1, grid = F, scale = F)
dev.off()
spectro(wv, collevels = seq(-115, 0, 1), wl = 250, flim = c(1.8, 9.6), palette = reverse.gray.colors.1, grid = F, scale = F)
par(mar = rep(1, 4))
spectro(wv, collevels = seq(-115, 0, 1), wl = 250, flim = c(1.8, 9.6), palette = reverse.gray.colors.1, grid = F, scale = F)
spectro(wv, collevels = seq(-115, 0, 1), wl = 250, flim = c(1.8, 9.6), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
spectro(wv, collevels = seq(-115, 0, 1), wl = 250, flim = c(1.8, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
spectro(wv, collevels = seq(-115, 0, 1), wl = 200, flim = c(1.8, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
spectro(wv, collevels = seq(-115, 0, 1), wl = 200, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 90, threshold = 10, plot = F,
bandpass = c(2000, 10000))
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
dfrq <- dfreq(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 90, threshold = 10, plot = F,
bandpass = c(2000, 10000))
points(x = dfrq[ , 1] + 0.01, y =  dfrq[ , 2], cex = 1,
col = "yellow2", pch = 20)
dfrq <- dfreq(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 90, threshold = 20, plot = F,
bandpass = c(2000, 10000))
points(x = dfrq[ , 1] + 0.01, y =  dfrq[ , 2], cex = 1,
col = "yellow2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 200, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 90, threshold = 20, plot = F,
bandpass = c(2000, 10000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 200, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 10, threshold = 20, plot = F,
bandpass = c(2000, 10000))
spectro(wv, collevels = seq(-115, 0, 1), wl = 200, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 10, threshold = 20, plot = F,
bandpass = c(2000, 10000))
spectro(wv, collevels = seq(-115, 0, 1), wl = 200, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 80, threshold = 20, plot = F,
bandpass = c(2000, 10000))
spectro(wv, collevels = seq(-115, 0, 1), wl = 200, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 10, threshold = 20, plot = F,
bandpass = c(2000, 10000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 200, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 80, threshold = 20, plot = F,
bandpass = c(2000, 10000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 200, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 80, threshold = 20, plot = F,
bandpass = c(2000, 11000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 200, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 80, threshold = 20, plot = F,
bandpass = c(2000, 11000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 200, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 80, threshold = 10, plot = F,
bandpass = c(2000, 11000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 200, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 80, threshold = 0, plot = F,
bandpass = c(2000, 11000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 0, plot = F,
bandpass = c(2000, 11000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 0, plot = F,
bandpass = c(4000, 11000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 0, plot = F,
bandpass = c(4000, 11000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 10, plot = F,
bandpass = c(4000, 11000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
dfrq <- dfreq(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 90, threshold = 10, plot = F,
bandpass = c(2000, 11000))
points(x = dfrq[ , 1] + 0.01, y =  dfrq[ , 2], cex = 1,
col = "yellow2", pch = 20)
exp_wv <- sels[sels$sound.files == "ADL SPL F UUU T1-2 6 a_SONG4.wav" & sels$selec == 27, ]
mar <- 0.01
wv <- readWave(filename = file.path(path, exp_wv$sound.files), from = exp_wv$start - mar, to = exp_wv$end + mar, units = "seconds")
par(mar = rep(1, 4))
spectro(wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 10, plot = F,
bandpass = c(4000, 11000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 11000))
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 11000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
par(mar = rep(1, 4))
spectro(wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 11000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
dfrq <- dfreq(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 90, threshold = 10, plot = F,
bandpass = c(2000, 11000))
# plot detected frequency contour
points(x = dfrq[ , 1] + 0.01, y =  dfrq[ , 2], cex = 1,
col = "yellow2", pch = 20)
exp_wv <- sels[sels$sound.files == "ADL SPL F UUU T1-2 6 a_SONG4.wav" & sels$selec == 27, ]
exp_wv$end <- exp_wv$end + 0.008
mar <- 0.01
wv <- readWave(filename = file.path(path, exp_wv$sound.files), from = exp_wv$start - mar, to = exp_wv$end + mar, units = "seconds")
par(mar = rep(1, 4))
spectro(wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 11000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
dfrq <- dfreq(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 90, threshold = 10, plot = F,
bandpass = c(2000, 11000))
# plot detected frequency contour
points(x = dfrq[ , 1] + 0.01, y =  dfrq[ , 2], cex = 1,
col = "yellow2", pch = 20)
exp_wv <- sels[sels$sound.files == "ADL SPL F UUU T1-2 6 a_SONG4.wav" & sels$selec == 34, ]
exp_wv$end <- exp_wv$end + 0.008
mar <- 0.01
wv <- readWave(filename = file.path(path, exp_wv$sound.files), from = exp_wv$start - mar, to = exp_wv$end + mar, units = "seconds")
par(mar = rep(1, 4))
spectro(wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 11000))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
dfrq <- dfreq(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 90, threshold = 10, plot = F,
bandpass = c(2000, 11000))
# plot detected frequency contour
points(x = dfrq[ , 1] + 0.01, y =  dfrq[ , 2], cex = 1,
col = "yellow2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 6500))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
dfrq <- dfreq(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 200,
ovlp = 90, threshold = 10, plot = F,
bandpass = c(2000, 11000))
# plot detected frequency contour
points(x = dfrq[ , 1] + 0.01, y =  dfrq[ , 2], cex = 1,
col = "yellow2", pch = 20)
spectro(wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 6500))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
exp_wv <- sels[sels$sound.files == "ADL SPL F UUU T1-2 6 a_SONG4.wav" & sels$selec == 34, ]
exp_wv$end <- exp_wv$end + 0.002
mar <- 0.01
wv <- readWave(filename = file.path(path, exp_wv$sound.files), from = exp_wv$start - mar, to = exp_wv$end + mar, units = "seconds")
par(mar = rep(1, 4))
spectro(wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 6500))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
exp_wv <- sels[sels$sound.files == "ADL SPL F UUU T1-2 6 a_SONG4.wav" & sels$selec == 34, ]
# exp_wv$end <- exp_wv$end + 0.002
mar <- 0.01
wv <- readWave(filename = file.path(path, exp_wv$sound.files), from = exp_wv$start - mar, to = exp_wv$end + mar, units = "seconds")
par(mar = rep(1, 4))
spectro(wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = wv, tlim = c(mar, exp_wv$end - exp_wv$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 6500))
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
exmp_wv <- sels[sels$sound.files == "ADL SPL F UUU T1-2 6 a_SONG4.wav" & sels$selec == 34, ]
wv <- readWave(filename = file.path(path, exmp_wv$sound.files), from = exmp_wv$start - mar, to = exmp_wv$end + mar, units = "seconds")
mar <- 0.01
wv <- readWave(filename = file.path(path, exmp_wv$sound.files), from = exmp_wv$start - mar, to = exmp_wv$end + mar, units = "seconds")
exmp_wv <- sels[sels$sound.files == "ADL SPL F UUU T1-2 6 a_SONG4.wav" & sels$selec == 34, ]
mar <- 0.01
wv <- readWave(filename = file.path(path, exmp_wv$sound.files), from = exmp_wv$start - mar, to = exmp_wv$end + mar, units = "seconds")
exmp_wv <- readWave(filename = file.path(path, exmp_sls$sound.files), from = exmp_sls$start - mar, to = exmp_sls$end + mar, units = "seconds")
exmp_sls <- sels[sels$sound.files == "ADL SPL F UUU T1-2 6 a_SONG4.wav" & sels$selec == 34, ]
mar <- 0.01
exmp_wv <- readWave(filename = file.path(path, exmp_sls$sound.files), from = exmp_sls$start - mar, to = exmp_sls$end + mar, units = "seconds")
wv_sl <- list(exmp_wv = exmp_wv, exmp_sls = exmp_sls, mar = mar)
saveRDS(wv_sl, "~/Dropbox/Websites/Blog/maRce10.github.com/img/fairy_wren_song_and_selections.RDS")
attach(wv_sl)
spectro(exmp_wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
trck_hrm <- track_harm(wave = exmp_wv, tlim = c(mar, exmp_sls$end - exmp_sls$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 6500))
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = "red2", pch = 20)
spectro(exmp_wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = adjustcolor("skyblue", 0.7), pch = 20)
spectro(exmp_wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90)
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = adjustcolor("blue", 0.7), pch = 20)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = exmp_wv, tlim = c(mar, exmp_sls$end - exmp_sls$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 6500))
spectro(exmp_wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90, main = "warbleR's 'track_harm'")
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = adjustcolor("red2", 0.7), pch = 20)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = exmp_wv, tlim = c(mar, exmp_sls$end - exmp_sls$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 6500))
spectro(exmp_wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90, main = "warbleR's 'track_harm'")
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = adjustcolor("red2", 0.5), pch = 20)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = exmp_wv, tlim = c(mar, exmp_sls$end - exmp_sls$start + mar), wl = 100,
ovlp = 90, threshold = 5, plot = F,
bandpass = c(4000, 6500))
spectro(exmp_wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90, main = "warbleR's 'track_harm'")
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = adjustcolor("red2", 0.5), pch = 20)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = exmp_wv, tlim = c(mar, exmp_sls$end - exmp_sls$start + mar), wl = 100,
ovlp = 70, threshold = 5, plot = F,
bandpass = c(4000, 6500))
spectro(exmp_wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90, main = "warbleR's 'track_harm'")
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = adjustcolor("red2", 0.5), pch = 20)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = exmp_wv, tlim = c(mar, exmp_sls$end - exmp_sls$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 6500))
spectro(exmp_wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90, main = "warbleR's 'track_harm'")
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = adjustcolor("red2", 0.5), pch = 20)
spectro(exmp_wv, collevels = seq(-115, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90, main = "seewave's 'dfreq'")
dfrq <- dfreq(wave = exmp_wv, tlim = c(mar, exmp_sls$end - exmp_sls$start + mar), wl = 200,
ovlp = 90, threshold = 10, plot = F,
bandpass = c(2000, 11000))
# plot detected frequency contour
points(x = dfrq[ , 1] + 0.01, y =  dfrq[ , 2], cex = 1,
col = adjustcolor("yellow2", 0.5), pch = 20)
# Simulate songs
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Simulating animal vocalizations.Rmd", rm.output.text = F)
# Track harmonics
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
KnitPost <- function(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file = NULL, categories = NULL , tags = NULL, tags.eq.cats = TRUE, rm.output.text = FALSE) {
if(!'package:knitr' %in% search()) library('knitr')
wdX <- getwd()
if(is.null(rmd.file)) stop("need to provide rmd.file biatch!")
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "assets/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache") # necessary for plots
render_jekyll()
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='png', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F, dpi = 70)
setwd(rmd.path) # setwd to base
corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = rmd.file)))
#knitr!!
out.file <- knit(as.character(rmd.file),
output = as.character(corresponding.md.file),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", rmd.file))
#fix heading to jekyll format
#add layout post
x <- readLines(corresponding.md.file)
x <- c(x[1], "layout: post", x[2:length(x)])
#fix date format
dl <- grep("date:", x)
dln <- x[dl]
dln <- gsub("date:","", dln)
y <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 1)
y <- gsub(" ","", y)
m <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 2)
m <- gsub(" ","", m)
d <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 3)
d <- gsub(" ","", d)
dln <- paste(d, m, y, sep = "-")
dln <- gsub('"',"", dln)
dln <- gsub(' ',"", dln)
x[dl] <- paste("date:", dln)
#remove output:
x <- x[-grep("output:", x)]
#remove md_document:
x <- x[-grep("md_document:", x)]
#remove variant: markdown_github
x <- x[-grep("variant: markdown_github", x)]
#remove output:
x <- x[-grep("author:", x)]
#put it together as a file
cat(x, file = corresponding.md.file, sep="\n")
#change name to include date
nn <- paste(y, m , d, basename(corresponding.md.file), sep = "-")
nn <- gsub('"',"", nn)
#replace spaces with _
nn <- gsub(" ","_", nn)
file.rename(from = corresponding.md.file, to = file.path(posts.path, nn))
unlink(list.files(path = "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/", pattern = "\\.wav$"))
setwd(wdX)
}
# Simulate songs
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Simulating animal vocalizations.Rmd", rm.output.text = F)
# Track harmonics
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = exmp_wv, tlim = c(mar, exmp_sls$end - exmp_sls$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 6500))
spectro(exmp_wv, collevels = seq(-100, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90, main = "warbleR's 'track_harm'")
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = adjustcolor("red2", 0.5), pch = 20)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = exmp_wv, tlim = c(mar, exmp_sls$end - exmp_sls$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 6500))
spectro(exmp_wv, collevels = seq(-90, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90, main = "warbleR's 'track_harm'")
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = adjustcolor("red2", 0.5), pch = 20)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = exmp_wv, tlim = c(mar, exmp_sls$end - exmp_sls$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 6500))
spectro(exmp_wv, collevels = seq(-80, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90, main = "warbleR's 'track_harm'")
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = adjustcolor("red2", 0.5), pch = 20)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = exmp_wv, tlim = c(mar, exmp_sls$end - exmp_sls$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 6500))
spectro(exmp_wv, collevels = seq(-50, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90, main = "warbleR's 'track_harm'")
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1,
col = adjustcolor("red2", 0.5), pch = 20)
spectro(exmp_wv, collevels = seq(-50, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90, main = "seewave's 'dfreq'")
dfrq <- dfreq(wave = exmp_wv, tlim = c(mar, exmp_sls$end - exmp_sls$start + mar), wl = 200,
ovlp = 90, threshold = 10, plot = F,
bandpass = c(2000, 11000))
# plot detected frequency contour
points(x = dfrq[ , 1] + 0.01, y =  dfrq[ , 2], cex = 1,
col = adjustcolor("yellow2", 0.5), pch = 20, cex = 1.6)
# track harmonic frequencu contour
trck_hrm <- track_harm(wave = exmp_wv, tlim = c(mar, exmp_sls$end - exmp_sls$start + mar), wl = 100,
ovlp = 80, threshold = 5, plot = F,
bandpass = c(4000, 6500))
spectro(exmp_wv, collevels = seq(-50, 0, 1), wl = 100, flim = c(1.3, 10.2), palette = reverse.gray.colors.1, grid = F, scale = F, ovlp = 90, main = "warbleR's 'track_harm'")
# plot detected frequency contour
points(x = trck_hrm[ , 1] + 0.01, y =  trck_hrm[ , 2], cex = 1.6,
col = adjustcolor("red2", 0.5), pch = 20)
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
