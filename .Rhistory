# add cluster label to each element (row)
est$class.sp <- as.character(sp_clust$classification)
# add a 0 to each value so they are displayed in order
est$class.sp <- ifelse(nchar(est$class.sp) == 1,
paste0(0, est$class.sp), est$class.sp)
plot(pca_sp$x[, 1], pca_sp$x[, 2], col = as.numeric(est$class.sp),
pch = as.numeric(est$class.sp), cex = 1.5, xlab = "PC1",
ylab = "PC2")
df <- df_DTW(X = est, wl = 200, threshold = 10, img = FALSE,
clip.edges = TRUE, bp =  c(2, 10))
df <- df_DTW(X = est, wl = 200, threshold = 10, img = FALSE,
clip.edges = TRUE, bp =  c(2, 10), pb = FALSE)
# set seed so we all get the same results
set.seed(10)
# run TSNE
tsne.df <- Rtsne(X = as.dist(df), theta = 0.01, dims = 5,
is_distance = TRUE)
tsne.df
# set seed so we all get the same results
set.seed(10)
tsne.df <- Rtsne(X = as.dist(df), theta = 0.01, dims = 2,
is_distance = TRUE)
plot(tsne.df$Y[, 1], tsne.df$Y[, 2], col = as.numeric(est$class.df),
pch = as.numeric(est$class.df) + 5, cex = 1.5, xlab = "Dim 1",
ylab = "Dim 2")
tsne.df
tsne.df$Y
tsne.df$Y[, 2]
as.numeric(est$class.df)
class.df
# label elements (rows)
est$class.df <- as.character(df_clust$classification)
est$class.df <- ifelse(nchar(est$class.df) == 1,  paste0(0, est$class.df), est$class.df)
# set seed so we all get the same results
set.seed(10)
# run TSNE
tsne.df <- Rtsne(X = as.dist(df), theta = 0.01, dims = 5,
is_distance = TRUE)
# clustering
df_clust <- Mclust(as.matrix(tsne.df$Y), G=1:15,
modelNames = mclust.options("emModelNames"),
verbose = FALSE)
# label elements (rows)
est$class.df <- as.character(df_clust$classification)
est$class.df <- ifelse(nchar(est$class.df) == 1,  paste0(0, est$class.df), est$class.df)
# make catalog
catalog(est, nrow = 10, ncol = 10, mar = 0.01,
flim = c(3.5, 10.5), ovlp = 30, labels = "class.df",
group.tag = "class.df", pal = reverse.heat.colors,
pb = FALSE, width = 15, box = FALSE, spec.mar = 0.5,
title = "df_DTW/TSNE", img.suffix = "df_DTW-TSNE",
max.group.cols = 4, tag.pal = list(cmc),
cex = 2, rm.axes = TRUE)
# set seed so we all get the same results
set.seed(10)
tsne.df <- Rtsne(X = as.dist(df), theta = 0.01, dims = 2,
is_distance = TRUE)
plot(tsne.df$Y[, 1], tsne.df$Y[, 2], col = as.numeric(est$class.df),
pch = as.numeric(est$class.df) + 5, cex = 1.5, xlab = "Dim 1",
ylab = "Dim 2")
Phae.stri <- readRDS("~/Dropbox/Websites/Blog/Phae.stri.RDS")
#function modified from http://brooksandrew.github.io/simpleblog/articles/blogging-with-r-markdown-and-jekyll-using-knitr/
KnitPost <- function(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file = NULL, categories = NULL , tags = NULL, tags.eq.cats = TRUE, rm.output.text = FALSE) {
if(!'package:knitr' %in% search()) library('knitr')
wdX <- getwd()
if(is.null(rmd.file)) stop("need to provide rmd.file biatch!")
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "assets/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache") # necessary for plots
render_jekyll()
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='png', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F, dpi = 70)
setwd(rmd.path) # setwd to base
corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = rmd.file)))
#knitr!!
out.file <- knit(as.character(rmd.file),
output = as.character(corresponding.md.file),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", rmd.file))
#fix heading to jekyll format
#add layout post
x <- readLines(corresponding.md.file)
x <- c(x[1], "layout: post", x[2:length(x)])
#fix date format
dl <- grep("date:", x)
dln <- x[dl]
dln <- gsub("date:","", dln)
y <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 1)
y <- gsub(" ","", y)
m <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 2)
m <- gsub(" ","", m)
d <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 3)
d <- gsub(" ","", d)
dln <- paste(d, m, y, sep = "-")
dln <- gsub('"',"", dln)
dln <- gsub(' ',"", dln)
x[dl] <- paste("date:", dln)
#remove output:
x <- x[-grep("output:", x)]
#remove md_document:
x <- x[-grep("md_document:", x)]
#remove variant: markdown_github
x <- x[-grep("variant: markdown_github", x)]
#remove output:
x <- x[-grep("author:", x)]
#put it together as a file
cat(x, file = corresponding.md.file, sep="\n")
#change name to include date
nn <- paste(y, m , d, basename(corresponding.md.file), sep = "-")
nn <- gsub('"',"", nn)
#replace spaces with _
nn <- gsub(" ","_", nn)
file.rename(from = corresponding.md.file, to = file.path(posts.path, nn))
unlink(list.files(path = "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/", pattern = "\\.wav$"))
setwd(wdX)
}
# spectro-PCA
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Issues spectral parameters-PCA.Rmd", rm.output.text = F)
# spectro-PCA
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Issues spectral parameters-PCA.Rmd", rm.output.text = F)
# spectro-PCA
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Issues spectral parameters-PCA.Rmd", rm.output.text = F)
setwd("~/Dropbox/Websites/Blog/maRce10.github.com")
system("git add .")
system('git commit -m "update PCA issues')
system("git push origin HEAD:master")
system("git add .")
system('git commit -m "update PCA issues"')
system("git push origin HEAD:master")
system("git add .")
system('git commit -m "feed fix"')
system("git push origin HEAD:master")
system("git add .")
system('git commit -m "feed fix 2"')
system("git push origin HEAD:master")
system("git add .")
system('git commit -m "feed fix 3"')
system("git push origin HEAD:master")
#function modified from http://brooksandrew.github.io/simpleblog/articles/blogging-with-r-markdown-and-jekyll-using-knitr/
KnitPost <- function(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file = NULL, categories = NULL , tags = NULL, tags.eq.cats = TRUE, rm.output.text = FALSE) {
if(!'package:knitr' %in% search()) library('knitr')
wdX <- getwd()
if(is.null(rmd.file)) stop("need to provide rmd.file biatch!")
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "assets/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache") # necessary for plots
render_jekyll()
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='png', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F, dpi = 70)
setwd(rmd.path) # setwd to base
corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = rmd.file)))
#knitr!!
out.file <- knit(as.character(rmd.file),
output = as.character(corresponding.md.file),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", rmd.file))
#fix heading to jekyll format
#add layout post
x <- readLines(corresponding.md.file)
x <- c(x[1], "layout: post", x[2:length(x)])
#fix date format
dl <- grep("date:", x)
dln <- x[dl]
dln <- gsub("date:","", dln)
y <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 1)
y <- gsub(" ","", y)
m <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 2)
m <- gsub(" ","", m)
d <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 3)
d <- gsub(" ","", d)
dln <- paste(d, m, y, sep = "-")
dln <- gsub('"',"", dln)
dln <- gsub(' ',"", dln)
x[dl] <- paste("date:", dln)
#remove output:
x <- x[-grep("output:", x)]
#remove md_document:
x <- x[-grep("md_document:", x)]
#remove variant: markdown_github
x <- x[-grep("variant: markdown_github", x)]
#remove output:
x <- x[-grep("author:", x)]
#put it together as a file
cat(x, file = corresponding.md.file, sep="\n")
#change name to include date
nn <- paste(y, m , d, basename(corresponding.md.file), sep = "-")
nn <- gsub('"',"", nn)
#replace spaces with _
nn <- gsub(" ","_", nn)
file.rename(from = corresponding.md.file, to = file.path(posts.path, nn))
unlink(list.files(path = "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/", pattern = "\\.wav$"))
setwd(wdX)
}
#
# # updates on catalog
# KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Updates on catalog function.Rmd", rm.output.text = F)
#
#
# # seltailor
# KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Fixing selections manually.Rmd", rm.output.text = F)
#
#
# # Rraven
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Rraven: Connecting R and Raven Sound Analysis Software.Rmd", rm.output.text = F)
system("git add .")
system('git commit -m "Rraven wording"')
system("git push origin HEAD:master")
system("git add .")
system('git commit -m "feed fix"')
system("git push origin HEAD:master")
system("git add .")
system('git commit -m "feed fix 2"')
system("git push origin HEAD:master")
system("git add .")
system('git commit -m "feed fix 3"')
system("git push origin HEAD:master")
library(warbleR)
setwd(tempdir())
data(list = c("Phae.long1", "Phae.long2", "Phae.long3", "selec.table"))
writeWave(Phae.long1,"Phae.long1.wav")
writeWave(Phae.long2,"Phae.long2.wav")
writeWave(Phae.long3,"Phae.long3.wav")
# measure acoustic parameters
sp_param <- specan(X = selec.table[1:8,], pb = FALSE)
names(sp_param)
names(sp_param, fast = T)
# measure acoustic parameters
sp_param <- specan(X = selec.table[1:8,], pb = FALSE, fast = T)
names(sp_param)
# measure acoustic parameters
sp_param <- specan(X = selec.table[1:8,], pb = FALSE, fast = F)
sp_param
names(sp_param)
# measure acoustic parameters
sp_param2 <- specan(X = selec.table[1:8,], pb = FALSE, fast = T)
names(sp_param2)
names(sp_param)
names(sp_param2)
# measure acoustic parameters
sp_param2 <- specan(X = selec.table[1:8,], pb = FALSE, fast = T, harmonicity = T)
names(sp_param2)
sp_param2
names(sp_param)
names(sp_param2)
#function modified from http://brooksandrew.github.io/simpleblog/articles/blogging-with-r-markdown-and-jekyll-using-knitr/
KnitPost <- function(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file = NULL, categories = NULL , tags = NULL, tags.eq.cats = TRUE, rm.output.text = FALSE) {
if(!'package:knitr' %in% search()) library('knitr')
wdX <- getwd()
if(is.null(rmd.file)) stop("need to provide rmd.file biatch!")
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "assets/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache") # necessary for plots
render_jekyll()
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='png', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F, dpi = 70)
setwd(rmd.path) # setwd to base
corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = rmd.file)))
#knitr!!
out.file <- knit(as.character(rmd.file),
output = as.character(corresponding.md.file),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", rmd.file))
#fix heading to jekyll format
#add layout post
x <- readLines(corresponding.md.file)
x <- c(x[1], "layout: post", x[2:length(x)])
#fix date format
dl <- grep("date:", x)
dln <- x[dl]
dln <- gsub("date:","", dln)
y <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 1)
y <- gsub(" ","", y)
m <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 2)
m <- gsub(" ","", m)
d <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 3)
d <- gsub(" ","", d)
dln <- paste(d, m, y, sep = "-")
dln <- gsub('"',"", dln)
dln <- gsub(' ',"", dln)
x[dl] <- paste("date:", dln)
#remove output:
x <- x[-grep("output:", x)]
#remove md_document:
x <- x[-grep("md_document:", x)]
#remove variant: markdown_github
x <- x[-grep("variant: markdown_github", x)]
#remove output:
x <- x[-grep("author:", x)]
#put it together as a file
cat(x, file = corresponding.md.file, sep="\n")
#change name to include date
nn <- paste(y, m , d, basename(corresponding.md.file), sep = "-")
nn <- gsub('"',"", nn)
#replace spaces with _
nn <- gsub(" ","_", nn)
file.rename(from = corresponding.md.file, to = file.path(posts.path, nn))
unlink(list.files(path = "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/", pattern = "\\.wav$"))
setwd(wdX)
}
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Extended selection tables.Rmd", rm.output.text = F)
remove.packages("warbleR")
devtools::install_github("maRce10/warbleR")
#function modified from http://brooksandrew.github.io/simpleblog/articles/blogging-with-r-markdown-and-jekyll-using-knitr/
KnitPost <- function(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file = NULL, categories = NULL , tags = NULL, tags.eq.cats = TRUE, rm.output.text = FALSE) {
if(!'package:knitr' %in% search()) library('knitr')
wdX <- getwd()
if(is.null(rmd.file)) stop("need to provide rmd.file biatch!")
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "assets/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache") # necessary for plots
render_jekyll()
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='png', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F, dpi = 70)
setwd(rmd.path) # setwd to base
corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = rmd.file)))
#knitr!!
out.file <- knit(as.character(rmd.file),
output = as.character(corresponding.md.file),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", rmd.file))
#fix heading to jekyll format
#add layout post
x <- readLines(corresponding.md.file)
x <- c(x[1], "layout: post", x[2:length(x)])
#fix date format
dl <- grep("date:", x)
dln <- x[dl]
dln <- gsub("date:","", dln)
y <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 1)
y <- gsub(" ","", y)
m <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 2)
m <- gsub(" ","", m)
d <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 3)
d <- gsub(" ","", d)
dln <- paste(d, m, y, sep = "-")
dln <- gsub('"',"", dln)
dln <- gsub(' ',"", dln)
x[dl] <- paste("date:", dln)
#remove output:
x <- x[-grep("output:", x)]
#remove md_document:
x <- x[-grep("md_document:", x)]
#remove variant: markdown_github
x <- x[-grep("variant: markdown_github", x)]
#remove output:
x <- x[-grep("author:", x)]
#put it together as a file
cat(x, file = corresponding.md.file, sep="\n")
#change name to include date
nn <- paste(y, m , d, basename(corresponding.md.file), sep = "-")
nn <- gsub('"',"", nn)
#replace spaces with _
nn <- gsub(" ","_", nn)
file.rename(from = corresponding.md.file, to = file.path(posts.path, nn))
unlink(list.files(path = "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/", pattern = "\\.wav$"))
setwd(wdX)
}
# # Rraven
# KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Rraven: Connecting R and Raven Sound Analysis Software.Rmd", rm.output.text = F)
#
# # Simulate songs
# KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Simulating animal vocalizations.Rmd", rm.output.text = F)
#
# # Track harmonics
# KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
#
# # Extended selection table
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Extended selection tables.Rmd", rm.output.text = F)
URL <- "https://marceloarayasalas.weebly.com/uploads/2/5/5/2/25524573/extended.selection.table.araya-salas.et.al.2017.bioacoustics.100.sels.rds"
dat <- readRDS(gzcon(url(URL)))
nrow(dat)
format(object.size(dat), units = "auto")
sp <- specan(dat)
sp <- specan(dat, bp = "frange")
sp <- specan(dat, bp = c(2, 10))
sp <- specan(dat, bp = c(2, 10))
sp
# # Rraven
# KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Rraven: Connecting R and Raven Sound Analysis Software.Rmd", rm.output.text = F)
#
# # Simulate songs
# KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Simulating animal vocalizations.Rmd", rm.output.text = F)
#
# # Track harmonics
# KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
#
# # Extended selection table
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Extended selection tables.Rmd", rm.output.text = F)
#function modified from http://brooksandrew.github.io/simpleblog/articles/blogging-with-r-markdown-and-jekyll-using-knitr/
KnitPost <- function(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file = NULL, categories = NULL , tags = NULL, tags.eq.cats = TRUE, rm.output.text = FALSE) {
if(!'package:knitr' %in% search()) library('knitr')
wdX <- getwd()
if(is.null(rmd.file)) stop("need to provide rmd.file biatch!")
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, "_Rmd") # directory where your Rmd-files reside (relative to base)
fig.dir <- "assets/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache") # necessary for plots
render_jekyll()
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='png', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F, dpi = 70)
setwd(rmd.path) # setwd to base
corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = rmd.file)))
#knitr!!
out.file <- knit(as.character(rmd.file),
output = as.character(corresponding.md.file),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", rmd.file))
#fix heading to jekyll format
#add layout post
x <- readLines(corresponding.md.file)
x <- c(x[1], "layout: post", x[2:length(x)])
#fix date format
dl <- grep("date:", x)
dln <- x[dl]
dln <- gsub("date:","", dln)
y <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 1)
y <- gsub(" ","", y)
m <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 2)
m <- gsub(" ","", m)
d <- sapply(strsplit(as.character(dln), "-",fixed=T), "[[", 3)
d <- gsub(" ","", d)
dln <- paste(d, m, y, sep = "-")
dln <- gsub('"',"", dln)
dln <- gsub(' ',"", dln)
x[dl] <- paste("date:", dln)
#remove output:
x <- x[-grep("output:", x)]
#remove md_document:
x <- x[-grep("md_document:", x)]
#remove variant: markdown_github
x <- x[-grep("variant: markdown_github", x)]
#remove output:
x <- x[-grep("author:", x)]
#put it together as a file
cat(x, file = corresponding.md.file, sep="\n")
#change name to include date
nn <- paste(y, m , d, basename(corresponding.md.file), sep = "-")
nn <- gsub('"',"", nn)
#replace spaces with _
nn <- gsub(" ","_", nn)
file.rename(from = corresponding.md.file, to = file.path(posts.path, nn))
unlink(list.files(path = "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/", pattern = "\\.wav$"))
setwd(wdX)
}
# # Rraven
# KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Rraven: Connecting R and Raven Sound Analysis Software.Rmd", rm.output.text = F)
#
# # Simulate songs
# KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Simulating animal vocalizations.Rmd", rm.output.text = F)
#
# # Track harmonics
# KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Tracking frequency countours when dominant frequency jumps across harmonics.Rmd", rm.output.text = F)
#
# # Extended selection table
KnitPost(site.path = "~/Dropbox/Websites/Blog/maRce10.github.com/", rmd.file =  "~/Dropbox/Websites/Blog/maRce10.github.com/_Rmd/Extended selection tables.Rmd", rm.output.text = F)
system("git add .")
system('git commit -m " fix frange in xcorr"')
system("git push origin HEAD:master")
library(warbleR)
# use a temporary directory
setwd(tempdir())
#load data
data(list = c("Phae.long1", "Phae.long2","lbh_selec_table"))
writeWave(Phae.long2, "Phae.long2.wav") #save sound files
writeWave(Phae.long1, "Phae.long1.wav")
# run function
dfts(X = lbh_selec_table, length.out = 30, flim = c(1, 12), bp = c(2, 9), wl = 300, pb = FALSE)
source('~/Dropbox/warbleR/R/dfts.R')
# run function
dfts(X = lbh_selec_table, length.out = 30, flim = c(1, 12), bp = c(2, 9), wl = 300, pb = FALSE)
# run function
cntours <- dfts(X = lbh_selec_table, length.out = 30, flim = c(1, 12), bp = c(2, 9), wl = 300, pb = FALSE)
dfDTW(ts.df = cntours)
# calculate DTW pairwise distances
dfDTW(ts.df = cntours[,-1])
lbh_selec_table
# get dom freq contours
cntours <- dfts(X = lbh_selec_table[1:5, ], length.out = 30, flim = c(1, 12), bp = c(2, 9), wl = 300, pb = FALSE)
# calculate DTW pairwise distances
dfDTW(ts.df = cntours)
seltailor(X = lbh_selec_table[1:5, ], wl = 300, ovlp = 90, flim = c(1, 12), ts.df = cntours)
seltailor(X = lbh_selec_table[1:5, ], wl = 300, ovlp = 90, flim = c(1, 12), ts.df = cntours, auto.contour = TRUE)
seltailor(X = lbh_selec_table[1:5, ], wl = 300, ovlp = 90, flim = c(1, 12), ts.df = cntours, auto.contour = TRUE, width = 8)
seltailor(X = lbh_selec_table[1:5, ], wl = 300, ovlp = 90, flim = c(1, 12), ts.df = cntours, auto.contour = TRUE, width = 8, mar = 0.1)
seltailor(X = lbh_selec_table[1:5, ], wl = 300, ovlp = 90, flim = c(1, 12), ts.df = cntours, auto.contour = TRUE, width = 10, mar = 0.15)
seltailor(X = lbh_selec_table[1:5, ], wl = 300, ovlp = 90, flim = c(1, 12), ts.df = cntours, auto.contour = TRUE, width = 10, mar = 0.15)
# load warbleR
library(warbleR)
